#!/usr/bin/zsh

if ! git rev-parse --is-inside-work-tree &>/dev/null; then
  echo "Not a git repository." 1>&2
  exit 1
fi

remote=$(git remote get-url origin)

if [[ -z "$remote" ]]; then
  echo "Git remote is not set" 1>&2
  exit 1
fi

branch_name=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

url=$(echo $remote | sed -e "s/git\@//g")
url=$(echo $url | sed -e 's/\.co\.uk:/\.co\.uk\//g')
url=$(echo $url | sed -e 's/\.com:/\.com\//g')
url=$(echo $url | sed -e 's/\.git//g')

if [ -z "$1" ]; then
  nohup xdg-open "http://$url" >/dev/null 2>&1 &
elif [ $1 = "-b" ] ; then
  nohup xdg-open "http://$url/tree/$branch_name" >/dev/null 2>&1 &
elif [ $1 = "-i" ] ; then
  nohup xdg-open "http://$url/issues" >/dev/null 2>&1 &
elif [ $1 = "-br" ] ; then
  nohup xdg-open "http://$url/branches" >/dev/null 2>&1 &
elif [ $1 = "-c" ] || [ $1 = "-commit" ] || [ $1 = "-commits" ]; then
  if [ -z "$2" ]; then
  nohup xdg-open "http://$url/commits/$branch_name" >/dev/null 2>&1 &
  else
    nohup xdg-open "http://$url/commit/$2" >/dev/null 2>&1 &
  fi
elif [ $1 = "-bl"  ] || [ $1 = "-blame" ] ; then
  if [ -z "$2" ]; then
    echo "Please specify a file to open blame"
  else
    # check file exists
    blame=$(git rev-parse --show-toplevel)/$2
    if [ -e $blame ]; then
      nohup xdg-open "http://$url/blame/$branch_name/$2" >/dev/null 2>&1 &
    else
      echo "File '$2' doesn't exist"
    fi
  fi
else
  echo "Parameter $1 not found"
fi
